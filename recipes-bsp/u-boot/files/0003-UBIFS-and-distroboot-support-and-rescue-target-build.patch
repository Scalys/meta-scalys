From d030cd9636f5e8fdab4cabddb6e049170f194e9a Mon Sep 17 00:00:00 2001
From: Joris van Vossen <joris.van.vossen@sintecs.nl>
Date: Fri, 13 Apr 2018 11:32:08 +0200
Subject: [PATCH] UBIFS and distroboot support and rescue target build merged
 with default target

---
 board/scalys/grapeboard/Kconfig               |  14 --
 .../grapeboard/board_configuration_data.c     |  73 +++++++---
 .../grapeboard/board_configuration_data.h     |   7 +
 board/scalys/grapeboard/grapeboard.c          |  44 ++++--
 configs/grapeboard_pcie_qspi_defconfig        |   3 +-
 configs/grapeboard_qspi_rescue_defconfig      |  59 --------
 configs/grapeboard_sata_qspi_defconfig        |   3 +-
 drivers/mtd/spi/spi_flash_ids.c               |   2 +-
 include/asm-generic/atomic-long.h             |   2 +
 include/configs/grapeboard.h                  | 128 ++++++++----------
 10 files changed, 149 insertions(+), 186 deletions(-)
 delete mode 100644 configs/grapeboard_qspi_rescue_defconfig

diff --git a/board/scalys/grapeboard/Kconfig b/board/scalys/grapeboard/Kconfig
index 99ece55e0f..6c2c92b5eb 100644
--- a/board/scalys/grapeboard/Kconfig
+++ b/board/scalys/grapeboard/Kconfig
@@ -15,20 +15,6 @@ config SYS_CONFIG_NAME
 menu "Grapeboard configuration options"
 	depends on TARGET_GRAPEBOARD
 
-choice
-	prompt "U-boot environment configuration"
-	default STANDARD_UBOOT_CONFIG
-	
-config STANDARD_UBOOT_CONFIG
-	bool
-	prompt "Standard flash target"
-	
-config RESCUE_UBOOT_CONFIG
-	bool
-	prompt "Rescue flash target"
-	
-endchoice
-
 config CONCAT_PBL_UBOOT_IMAGE
 	bool
 	default y
diff --git a/board/scalys/grapeboard/board_configuration_data.c b/board/scalys/grapeboard/board_configuration_data.c
index d277454ed9..8d5cc9ca9a 100644
--- a/board/scalys/grapeboard/board_configuration_data.c
+++ b/board/scalys/grapeboard/board_configuration_data.c
@@ -83,46 +83,77 @@ int add_mac_addressess_to_env(const void* blob)
 	return 0;
 }
 
-struct udevice* sel_rescue_qspi_flash(bool sel_rescue) {
+const char* get_qspi_flash_name(void)
+{
+	struct udevice *flash_dev, *bus_dev;
+	struct spi_flash *flash;
+	int ret = 0;
+	unsigned int bus = CONFIG_SF_DEFAULT_BUS;
+	unsigned int cs = CONFIG_SF_DEFAULT_CS;
+	unsigned int speed = CONFIG_SF_DEFAULT_SPEED;
+	unsigned int mode = CONFIG_SF_DEFAULT_MODE;
+
+	/* Remove previous DM device */
+	ret = spi_find_bus_and_cs(bus, cs, &bus_dev, &flash_dev);
+	if (!ret) {
+		device_remove(flash_dev, DM_REMOVE_NORMAL);
+	}
+
+	/* Probe flash */
+	ret = spi_flash_probe_bus_cs(bus, cs, speed, mode, &flash_dev);
+	if (ret != 0) {
+		printf("probe failed\n");
+		return NULL;
+	}
+
+	flash = dev_get_uclass_priv(flash_dev);
+
+	return flash->name;
+}
+
+struct udevice* select_qspi_flash_device(enum grapeboard_flash_types flash_type)
+{
 	struct ccsr_gpio *pgpio = (void *)(CONFIG_SYS_GPIO2);
-	struct udevice *rescue_flash_dev,*bus_dev;
+	struct udevice *flash_dev,*bus_dev;
 	int ret = 0;
-	unsigned int bus = 0;
-	unsigned int cs = 0;
-	unsigned int speed = 0;
-	unsigned int mode = 0;
+	unsigned int bus = CONFIG_SF_DEFAULT_BUS;
+	unsigned int cs = CONFIG_SF_DEFAULT_CS;
+	unsigned int speed = CONFIG_SF_DEFAULT_SPEED;
+	unsigned int mode = CONFIG_SF_DEFAULT_MODE;
 
 	/* Remove previous DM device */
-	ret = spi_find_bus_and_cs(bus, cs, &bus_dev, &rescue_flash_dev);
+	ret = spi_find_bus_and_cs(bus, cs, &bus_dev, &flash_dev);
 	if (!ret) {
-		device_remove(rescue_flash_dev, DM_REMOVE_NORMAL);
+		device_remove(flash_dev, DM_REMOVE_NORMAL);
 	}
 
 	setbits_be32(&pgpio->gpdir, QSPI_MUX_N_MASK);
-	if (sel_rescue == true) {
-		/* Change chip select to rescue QSPI NOR flash */
-		setbits_be32(&pgpio->gpdat, QSPI_MUX_N_MASK);
-	} else {
+	switch (flash_type) {
+	case PRIMARY_FLASH_DEVICE:
 		/* Revert chip select muxing to standard QSPI flash */
 		clrbits_be32(&pgpio->gpdat, QSPI_MUX_N_MASK);
 		/* Delay required (to meet RC time for button debouncing) before probing flash again.
-		 * May be removed but the primary flash is only available after delay */
+		 * Delay may be removed but the primary flash is only available after the delay */
 		udelay(75000);
+		break;
+	case RESCUE_FLASH_DEVICE:
+		/* Change chip select to rescue QSPI NOR flash */
+		setbits_be32(&pgpio->gpdat, QSPI_MUX_N_MASK);
+		break;
+	default:
+		break;
 	}
 
 	/* Probe new flash */
-	ret = spi_flash_probe_bus_cs(bus, cs, speed, mode, &rescue_flash_dev);
+	ret = spi_flash_probe_bus_cs(bus, cs, speed, mode, &flash_dev);
 	if (ret != 0) {
 		printf("probe failed\n");
 		return NULL;
 	}
 
-	return rescue_flash_dev;
-
+	return flash_dev;
 }
 
-
-
 const void* get_boardinfo_rescue_flash(void)
 {
 	struct udevice *rescue_flash_dev;
@@ -133,7 +164,7 @@ const void* get_boardinfo_rescue_flash(void)
 	int ret = 0;
 
 	/* Select and probe rescue flash */
-	rescue_flash_dev = sel_rescue_qspi_flash(true);
+	rescue_flash_dev = select_qspi_flash_device(true);
 
 	if (rescue_flash_dev == NULL)
 		goto err_no_free;
@@ -196,7 +227,7 @@ const void* get_boardinfo_rescue_flash(void)
 	}
 
    	/* Select and probe normal flash */
-   	rescue_flash_dev = sel_rescue_qspi_flash(false);
+   	rescue_flash_dev = select_qspi_flash_device(false);
 
 	/* Everything checked out, return the BCD data.
 	 * The caller is expected to free this data */
@@ -209,7 +240,7 @@ err_free:
 err_no_free:	
 
 	/* Select and probe normal flash */
-	rescue_flash_dev = sel_rescue_qspi_flash(false);
+	rescue_flash_dev = select_qspi_flash_device(false);
 	return NULL;
 }
 
diff --git a/board/scalys/grapeboard/board_configuration_data.h b/board/scalys/grapeboard/board_configuration_data.h
index f08eea8f07..4f65ce4541 100644
--- a/board/scalys/grapeboard/board_configuration_data.h
+++ b/board/scalys/grapeboard/board_configuration_data.h
@@ -14,7 +14,14 @@
 
 #define BCD_HASH_SIZE	4
 
+enum grapeboard_flash_types {
+	PRIMARY_FLASH_DEVICE,
+	RESCUE_FLASH_DEVICE,
+};
+
 const void* get_boardinfo_rescue_flash(void);
+struct udevice* select_qspi_flash_device(enum grapeboard_flash_types);
+const char* get_qspi_flash_name(void);
 int add_mac_addressess_to_env(const void* blob);
 
 #endif /* _BCD_H */
diff --git a/board/scalys/grapeboard/grapeboard.c b/board/scalys/grapeboard/grapeboard.c
index 72d951026d..c9bb28f7d0 100644
--- a/board/scalys/grapeboard/grapeboard.c
+++ b/board/scalys/grapeboard/grapeboard.c
@@ -30,22 +30,38 @@
 #include <usb.h>
 #include "gpio_grapeboard.h"
 #include "board_configuration_data.h"
+#include <dm.h>
+#include <spi.h>
+#include <dm/device-internal.h>
+
+#define RESCUE_FLASH_NAME "s25fs064s"
 
 DECLARE_GLOBAL_DATA_PTR;
 
 int checkboard(void)
 {
 	struct ccsr_gpio *pgpio = (void *)(CONFIG_SYS_GPIO2);
+	const void* bcd_dtc_blob;
+	int ret;
 
 	int m2_config = 0;
 	int serdes_cfg = get_serdes_protocol();
 
-	puts("Board: Grape board\n");
+	puts("Board: Grapeboard\n");
 
 	/* set QSPI chip select muxing to 0 */
 	setbits_be32(&pgpio->gpdir, QSPI_MUX_N_MASK);
 	clrbits_be32(&pgpio->gpdat, QSPI_MUX_N_MASK);
 
+	bcd_dtc_blob = get_boardinfo_rescue_flash();
+	if (bcd_dtc_blob != NULL) {
+		/* Board Configuration Data is intact, ready for parsing */
+		ret = add_mac_addressess_to_env(bcd_dtc_blob);
+		if (ret != 0) {
+			printf("Error adding BCD data to environment\n");
+		}
+	}
+
 	/* Configure USB hub */
 	usb_hx3_hub_init();
 
@@ -77,18 +93,6 @@ int checkboard(void)
 
 int misc_init_r(void)
 {
-	const void* bcd_dtc_blob;
-	int ret;
-
-	bcd_dtc_blob = get_boardinfo_rescue_flash();
-	if (bcd_dtc_blob != NULL) {
-		/* Board Configuration Data is intact, ready for parsing */
-		ret = add_mac_addressess_to_env(bcd_dtc_blob);
-		if (ret != 0) {
-			printf("Error adding BCD data to environment\n");
-		}
-	}
-
 	return 0;
 }
 
@@ -132,6 +136,7 @@ int board_init(void)
 {
 	struct ccsr_cci400 *cci = (struct ccsr_cci400 *)(CONFIG_SYS_IMMR +
 					CONFIG_SYS_CCI400_OFFSET);
+	struct ccsr_gpio *pgpio = (void *)(CONFIG_SYS_GPIO2);
 	/*
 	 * Set CCI-400 control override register to enable barrier
 	 * transaction
@@ -146,6 +151,18 @@ int board_init(void)
 	gd->env_addr = (ulong)&default_environment[0];
 #endif
 
+	/* Detect and handle grapeboard rescue mode */
+	if(strcmp(get_qspi_flash_name(), RESCUE_FLASH_NAME) == 0) {
+		/* Revert chip select muxing to standard QSPI flash */
+		setbits_be32(&pgpio->gpdir, QSPI_MUX_N_MASK);
+		clrbits_be32(&pgpio->gpdat, QSPI_MUX_N_MASK);
+		printf("Please release the rescue mode button (S2) to enter the recovery mode\n");
+		while(strcmp(get_qspi_flash_name(), RESCUE_FLASH_NAME) == 0) {
+			udelay(500000);
+			puts("\033[1A"); /* Overwrite previous line */
+		}
+	}
+
 #ifdef CONFIG_FSL_CAAM
 	sec_init();
 #endif
@@ -178,4 +195,3 @@ int ft_board_setup(void *blob, bd_t *bd)
 void scsi_init(void) {
 	printf("\r"); /* SCSI init already completed in board_late_init, so skip message */
 }
-
diff --git a/configs/grapeboard_pcie_qspi_defconfig b/configs/grapeboard_pcie_qspi_defconfig
index 26f33a4a26..2d0feb9a7b 100644
--- a/configs/grapeboard_pcie_qspi_defconfig
+++ b/configs/grapeboard_pcie_qspi_defconfig
@@ -3,7 +3,6 @@ CONFIG_TARGET_GRAPEBOARD=y
 CONFIG_FSL_LS_PPA=y
 CONFIG_QSPI_AHB_INIT=y
 CONFIG_DEFAULT_DEVICE_TREE="grapeboard"
-CONFIG_STANDARD_UBOOT_CONFIG=y
 CONFIG_SYS_LS_PPA_FW_ADDR=0x40240000
 CONFIG_CONCAT_PBL_UBOOT_IMAGE=y
 CONFIG_PBL_BINARY_SRC="board/scalys/grapeboard/PBL_0x33_0x05_800_250_1000.bin"
@@ -16,7 +15,7 @@ CONFIG_SYS_EXTRA_OPTIONS="QSPI_BOOT"
 CONFIG_QSPI_BOOT=y
 CONFIG_BOOTDELAY=2
 CONFIG_USE_BOOTARGS=y
-CONFIG_BOOTARGS="console=ttyS0,115200 earlycon=uart8250,mmio,0x21c0500 quiet lpj=250000 noinitrd root=/dev/mmcblk0p1 rootfstype=ext4 rw rootwait"
+CONFIG_BOOTARGS="console=ttyS0,115200 earlycon=uart8250,mmio,0x21c0500 quiet lpj=250000 noinitrd"
 # CONFIG_DISPLAY_BOARDINFO is not set
 CONFIG_HUSH_PARSER=y
 CONFIG_CMD_GREPENV=y
diff --git a/configs/grapeboard_qspi_rescue_defconfig b/configs/grapeboard_qspi_rescue_defconfig
deleted file mode 100644
index 5649f3fc60..0000000000
--- a/configs/grapeboard_qspi_rescue_defconfig
+++ /dev/null
@@ -1,59 +0,0 @@
-CONFIG_ARM=y
-CONFIG_TARGET_GRAPEBOARD=y
-CONFIG_FSL_LS_PPA=y
-CONFIG_QSPI_AHB_INIT=y
-CONFIG_DEFAULT_DEVICE_TREE="grapeboard"
-CONFIG_RESCUE_UBOOT_CONFIG=y
-CONFICONFIG_SYS_LS_PPA_FW_ADDR=0x400a0000
-CONFIG_SYS_LS_PFE_FW_ADDR=0x400c0000
-CONFIG_PBL_BINARY_SRC="board/scalys/grapeboard/PBL_0x33_0x05_800_250_1000.bin"
-
-# CONFIG_SYS_MALLOC_F is not set
-CONFIG_FIT_VERBOSE=y
-CONFIG_OF_BOARD_SETUP=y
-CONFIG_OF_STDOUT_VIA_ALIAS=y
-CONFIG_SYS_EXTRA_OPTIONS="QSPI_BOOT"
-CONFIG_QSPI_BOOT=y
-CONFIG_BOOTDELAY=10
-# CONFIG_DISPLAY_BOARDINFO is not set
-CONFIG_HUSH_PARSER=y
-CONFIG_CMD_GREPENV=y
-CONFIG_CMD_GPT=y
-CONFIG_CMD_MMC=y
-CONFIG_CMD_SF=y
-CONFIG_CMD_I2C=y
-CONFIG_CMD_USB=y
-# CONFIG_CMD_SETEXPR is not set
-CONFIG_CMD_DHCP=y
-CONFIG_CMD_MII=y
-CONFIG_CMD_PING=y
-CONFIG_CMD_CACHE=y
-CONFIG_CMD_EXT2=y
-CONFIG_CMD_FAT=y
-CONFIG_OF_CONTROL=y
-CONFIG_NET_RANDOM_ETHADDR=y
-CONFIG_DM=y
-# CONFIG_BLK is not set
-CONFIG_DM_MMC=y
-# CONFIG_DM_MMC_OPS is not set
-CONFIG_DM_SPI_FLASH=y
-CONFIG_SPI_FLASH=y
-CONFIG_NETDEVICES=y
-CONFIG_E1000=y
-CONFIG_FSL_PFE=y
-CONFIG_PHYLIB=y
-CONFIG_PHY_TI=y
-CONFIG_PCI=y
-CONFIG_DM_PCI=y
-CONFIG_DM_PCI_COMPAT=y
-CONFIG_PCIE_LAYERSCAPE=y
-CONFIG_SYS_NS16550=y
-CONFIG_DM_SPI=y
-CONFIG_FSL_DSPI=y
-CONFIG_USB=y
-CONFIG_DM_USB=y
-CONFIG_USB_XHCI_HCD=y
-CONFIG_USB_XHCI_DWC3=y
-CONFIG_USB_STORAGE=y
-CONFIG_DISTRO_DEFAULTS=y
-
diff --git a/configs/grapeboard_sata_qspi_defconfig b/configs/grapeboard_sata_qspi_defconfig
index 47eb0f2204..f3aeeddefd 100644
--- a/configs/grapeboard_sata_qspi_defconfig
+++ b/configs/grapeboard_sata_qspi_defconfig
@@ -3,7 +3,6 @@ CONFIG_TARGET_GRAPEBOARD=y
 CONFIG_FSL_LS_PPA=y
 CONFIG_QSPI_AHB_INIT=y
 CONFIG_DEFAULT_DEVICE_TREE="grapeboard"
-CONFIG_STANDARD_UBOOT_CONFIG=y
 CONFIG_SYS_LS_PPA_FW_ADDR=0x40240000
 CONFIG_CONCAT_PBL_UBOOT_IMAGE=y
 CONFIG_PBL_BINARY_SRC="board/scalys/grapeboard/PBL_0x33_0x08_800_250_1000.bin"
@@ -16,7 +15,7 @@ CONFIG_SYS_EXTRA_OPTIONS="QSPI_BOOT"
 CONFIG_QSPI_BOOT=y
 CONFIG_BOOTDELAY=2
 CONFIG_USE_BOOTARGS=y
-CONFIG_BOOTARGS="console=ttyS0,115200 earlycon=uart8250,mmio,0x21c0500 quiet lpj=250000 noinitrd root=/dev/mmcblk0p1 rootfstype=ext4 rw rootwait"
+CONFIG_BOOTARGS="console=ttyS0,115200 earlycon=uart8250,mmio,0x21c0500 quiet lpj=250000 noinitrd"
 # CONFIG_DISPLAY_BOARDINFO is not set
 CONFIG_HUSH_PARSER=y
 CONFIG_CMD_GREPENV=y
diff --git a/drivers/mtd/spi/spi_flash_ids.c b/drivers/mtd/spi/spi_flash_ids.c
index 5b836f4505..374f6b2f51 100644
--- a/drivers/mtd/spi/spi_flash_ids.c
+++ b/drivers/mtd/spi/spi_flash_ids.c
@@ -104,7 +104,7 @@ const struct spi_flash_info spi_flash_ids[] = {
 	{"s25fs256s_64k",  INFO6(0x010219, 0x4d0181, 64 * 1024, 512, RD_FULL | WR_QPP | SECT_4K) },
 	{"s25fl256s_64k",  INFO(0x010219, 0x4d01,  64 * 1024,   512, RD_FULL | WR_QPP) },
 	{"s25fs512s",      INFO6(0x010220, 0x4d0081, 256 * 1024, 256, RD_FULL | WR_QPP | ADDR_4B) },
-	{"s25fs064s",      INFO6(0x010217, 0x4d0181, 64 * 1024, 128, RD_FULL | WR_QPP | ADDR_4B) },
+	{"s25fs064s",      INFO6(0x010217, 0x4d0181, 64 * 1024, 128, RD_FULL | ADDR_4B) },
 	{"s25fl512s_256k", INFO(0x010220, 0x4d00, 256 * 1024,   256, RD_FULL | WR_QPP) },
 	{"s25fl512s_64k",  INFO(0x010220, 0x4d01,  64 * 1024,  1024, RD_FULL | WR_QPP) },
 	{"s25fl512s_512k", INFO(0x010220, 0x4f00, 256 * 1024,   256, RD_FULL | WR_QPP) },
diff --git a/include/asm-generic/atomic-long.h b/include/asm-generic/atomic-long.h
index d0469ef2e3..32f288b706 100644
--- a/include/asm-generic/atomic-long.h
+++ b/include/asm-generic/atomic-long.h
@@ -66,6 +66,7 @@ static inline void atomic_long_sub(long i, atomic_long_t *l)
 	atomic64_sub(i, v);
 }
 
+#ifndef __UBOOT__
 static inline int atomic_long_sub_and_test(long i, atomic_long_t *l)
 {
 	atomic64_t *v = (atomic64_t *)l;
@@ -135,6 +136,7 @@ static inline long atomic_long_add_unless(atomic_long_t *l, long a, long u)
 	(atomic64_cmpxchg((atomic64_t *)(l), (old), (new)))
 #define atomic_long_xchg(v, new) \
 	(atomic64_xchg((atomic64_t *)(v), (new)))
+#endif  /*  __UBOOT__ */
 
 #else  /*  BITS_PER_LONG == 64  */
 
diff --git a/include/configs/grapeboard.h b/include/configs/grapeboard.h
index e148e658d6..19265fe2e3 100644
--- a/include/configs/grapeboard.h
+++ b/include/configs/grapeboard.h
@@ -52,7 +52,7 @@
 #define CONFIG_LAYERSCAPE_NS_ACCESS
 
 /* Size of malloc() pool */
-#define CONFIG_SYS_MALLOC_LEN				(0x40000 + 128 * 1024)
+#define CONFIG_SYS_MALLOC_LEN				(0x60000 + 128 * 1024)
 
 /* QSPI */
 #ifdef CONFIG_QSPI_BOOT
@@ -62,7 +62,6 @@
 #define CONFIG_ENV_SPI_CS					0
 #define CONFIG_ENV_SPI_MAX_HZ				1000000
 #define CONFIG_ENV_SPI_MODE					0x03
-#define CONFIG_SPI_FLASH_SPANSION
 #define CONFIG_FSL_SPI_INTERFACE
 #define CONFIG_SF_DATAFLASH
 #define CONFIG_FSL_QSPI
@@ -71,21 +70,14 @@
 #define CONFIG_SPI_FLASH_SST
 #define FSL_QSPI_FLASH_SIZE					SZ_64M
 #define FSL_QSPI_FLASH_NUM					1
+#endif /* CONFIG_QSPI_BOOT */
 
-/* QSPI Environment */
-#define CONFIG_ENV_SIZE						0x40000          /* 256KB */
-
-#if CONFIG_RESCUE_UBOOT_CONFIG
-/* Rescue flash size is at minimum 1MBytes.
- * I.e. PBL/U-boot/PPA/PFE/BCD must fit within 0x100000. */
-#define CONFIG_ENV_IS_NOWHERE
-#else
+/* Environment */
 #define CONFIG_ENV_OVERWRITE
-/*#define CONFIG_ENV_IS_IN_SPI_FLASH*/
+
+#define CONFIG_ENV_SIZE						0x40000          /* 256KB */
 #define CONFIG_ENV_OFFSET					0x200000        /* 2MB */
 #define CONFIG_ENV_SECT_SIZE				0x40000
-#endif
-#endif /* CONFIG_QSPI_BOOT */
 
 /* SPI */
 #define CONFIG_FSL_DSPI1
@@ -119,9 +111,6 @@
 #define CONFIG_HWCONFIG
 #define HWCONFIG_BUFFER_SIZE				128
 
-#include <config_distro_defaults.h>
-#include <config_distro_bootcmd.h>
-
 /* Monitor Command Prompt */
 #define CONFIG_SYS_CBSIZE					512	/* Console I/O Buffer Size */
 #define CONFIG_SYS_PBSIZE					(CONFIG_SYS_CBSIZE + sizeof(CONFIG_SYS_PROMPT) + 16)
@@ -170,6 +159,25 @@
 #define CONFIG_USE_SPIFLASH
 #define CONFIG_SPI_FLASH_MTD
 
+/* UBI filesystem support */
+#define CONFIG_CMD_UBI
+#define CONFIG_CMD_UBIFS
+#define CONFIG_RBTREE
+#define CONFIG_LZO
+#define CONFIG_MTD_UBI_WL_THRESHOLD	4096
+#define CONFIG_MTD_UBI_BEB_LIMIT	20
+
+#include <config_distro_defaults.h>
+#ifndef CONFIG_SPL_BUILD
+#define BOOT_TARGET_DEVICES(func) \
+	func(MMC, mmc, 0) \
+	func(USB, usb, 0) \
+	func(USB, usb, 1) \
+	func(UBIFS, ubifs, 0) \
+	func(SCSI, scsi, 0)
+#include <config_distro_bootcmd.h>
+#endif
+
 #define MTDIDS_DEFAULT \
 	"nor0=qspi@40000000.0"
 
@@ -179,35 +187,13 @@
 		"256k(env)," \
 		"256k(ppa)," \
 		"256k(pfe)," \
-		"-(rootfs)"
+		"-(UBI)"
 
 /* Default environment variables */
 #define COMMON_UBOOT_CONFIG \
-	"verify=no\0"				\
-	"fdt_high=0xffffffffffffffff\0"		\
-	"initrd_high=0xffffffffffffffff\0"	\
-	"fdt_addr=0x00f00000\0"			\
-	"kernel_addr=0x01000000\0"		\
-	"kernelheader_addr=0x800000\0"		\
-	"scriptaddr=0x80000000\0"		\
-	"scripthdraddr=0x80080000\0"		\
-	"fdtheader_addr_r=0x80100000\0"		\
-	"kernelheader_addr_r=0x80200000\0"	\
-	"kernel_addr_r=0x81000000\0"		\
-	"fdt_addr_r=0x90000000\0"		\
-	"load_addr=0xa0000000\0"		\
-	"kernel_size=0x2800000\0"		\
-	"kernelheader_size=0x40000\0"		\
-	"console=ttyS0,115200\0"		\
-	"ethprime=pfe_eth0\0" \
-	"ethaddr=02:00:00:ba:be:01\0" \
-	"eth1addr=02:00:00:ba:be:02\0" \
-	"update_files_path=.\0" \
-	"update_source_file_system=ext4\0" \
-	"autoload=no\0" \
 	"update_tftp_uboot_qspi_nor=" \
         "dhcp;" \
-        "tftp $load_addr $update_files_path/u-boot-with-pbl.bin;" \
+        "tftp $load_addr $TFTP_PATH/u-boot-with-pbl.bin;" \
         "if test $? = \"0\"; then " \
         	"sf probe 0:0;" \
         	"sf erase u-boot 200000;" \
@@ -215,7 +201,7 @@
         "fi\0" \
 	"update_tftp_ppa_qspi_nor=" \
         "dhcp;" \
-        "tftp $load_addr $update_files_path/ppa.itb;" \
+        "tftp $load_addr $TFTP_PATH/ppa.itb;" \
         "if test $? = \"0\"; then " \
         	"sf probe 0:0;" \
 		    "sf erase ppa 40000;" \
@@ -223,7 +209,7 @@
         "fi\0" \
 	"update_tftp_pfe_qspi_nor=" \
         "dhcp;" \
-        "tftp $load_addr $update_files_path/pfe_fw_sbl.itb;" \
+        "tftp $load_addr $TFTP_PATH/pfe_fw_sbl.itb;" \
         "if test $? = \"0\"; then " \
         	"sf probe 0:0;" \
 		    "sf erase pfe 40000;" \
@@ -278,47 +264,43 @@
             "sf write $load_addr pfe $filesize;" \
         "fi\0" \
 
-/* Default flash specific environment variables */
-#if CONFIG_RESCUE_UBOOT_CONFIG
-#define CONFIG_EXTRA_ENV_SETTINGS		\
-		COMMON_UBOOT_CONFIG
-#undef CONFIG_BOOTCOMMAND
-#if defined(CONFIG_QSPI_BOOT) || defined(CONFIG_SD_BOOT_QSPI)
-/* recover from sd card */
-#define CONFIG_BOOTCOMMAND "run update_mmc_uboot_pbl_qspi_nor; run update_mmc_pfe_qspi_nor; run update_mmc_ppa_qspi_nor"
-#endif
-
-#else /* if CONFIG_STANDARD_UBOOT_CONFIG */
 #define CONFIG_EXTRA_ENV_SETTINGS		\
+	"verify=no\0"				\
+	"fdt_high=0xffffffffffffffff\0"		\
+	"initrd_high=0xffffffffffffffff\0"	\
+	"fdt_addr=0x00f00000\0"			\
+	"kernel_addr=0x01000000\0"		\
+	"kernelheader_addr=0x800000\0"		\
+	"scriptaddr=0x80000000\0"		\
+	"scripthdraddr=0x80080000\0"		\
+	"fdtheader_addr_r=0x80100000\0"		\
+	"kernelheader_addr_r=0x80200000\0"	\
+	"kernel_addr_r=0x81000000\0"		\
+	"fdt_addr_r=0x90000000\0"		\
+	"load_addr=0xa0000000\0"		\
+	"kernel_size=0x2800000\0"		\
+	"kernelheader_size=0x40000\0"		\
+	"console=ttyS0,115200\0"		\
+	"ethprime=pfe_eth0\0" \
+	"ethaddr=02:00:00:ba:be:01\0" \
+	"eth1addr=02:00:00:ba:be:02\0" \
+	"TFTP_PATH=.\0" \
+	"autoload=no\0" \
 	COMMON_UBOOT_CONFIG \
-	"mmcboot=" \
+	BOOTENV					\
+	"boot_scripts=grapeboard_boot.scr grapeboard_recovery.scr\0"	\
+	"default_bootargs=root=/dev/mmcblk0p1 rootfstype=ext4 rw rootwait\0" \
+	"default_boot=" \
 		"ext4load mmc 0:1 $fdt_addr_r /boot/grapeboard.dtb;" \
 		"ext4load mmc 0:1 $kernel_addr_r /boot/uImage;" \
 		"if test $? = \"0\"; then " \
 			"pfe stop;" \
+			"setenv bootargs $bootargs $default_bootargs" \
 			"bootm $kernel_addr_r - $fdt_addr_r;" \
 		"fi\0" \
-	"scsiboot=" \
-		"ext4load scsi 0:1 $fdt_addr_r /boot/grapeboard.dtb;" \
-		"ext4load scsi 0:1 $kernel_addr_r /boot/uImage;" \
-		"if test $? = \"0\"; then " \
-			"pfe stop;" \
-			"bootm $kernel_addr_r - $fdt_addr_r;" \
-		"fi\0" \
-	"netboot=" \
-		"dhcp;" \
-		"tftp $fdt_addr_r $tftp_path/grapeboard.dtb;" \
-		"tftp $kernel_addr_r $tftp_path/uImage;" \
-		"if test $? = \"0\"; then " \
-			"pfe stop;" \
-			"bootm $kernel_addr_r - $fdt_addr_r;" \
-		"fi\0"
 
 #undef CONFIG_BOOTCOMMAND
-#if defined(CONFIG_QSPI_BOOT) || defined(CONFIG_SD_BOOT_QSPI)
-#define CONFIG_BOOTCOMMAND "run mmcboot"
-#endif
-#endif
+#define CONFIG_BOOTCOMMAND 	"run distro_bootcmd; run default_boot"
 
 #include <asm/fsl_secure_boot.h>
 
-- 
2.17.0

